buildscript {
	ext {
		springBootVersion = '1.4.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

plugins {
	id 'com.github.kt3k.coveralls' version '2.6.3'
	id "org.asciidoctor.convert" version "1.5.2"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: "jacoco"
apply plugin: 'idea'

jar {
	baseName = 'Quote'
	version = '0.0.1-SNAPSHOT'
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	maven { url 'https://repo.spring.io/libs-snapshot' }
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-data-rest')

	runtime('com.h2database:h2')

	testCompile('org.springframework.boot:spring-boot-starter-test') 
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
		csv.enabled false
		html.destination "${buildDir}/jacocoHtml"
	}
}

ext {
	snippetsDir = file('build/generated-snippets')
}


test {
	outputs.dir snippetsDir
}

asciidoctor {
	attributes 'snippets': snippetsDir
	inputs.dir snippetsDir
	dependsOn test
}

bootRun {
	addResources true;
}

task stage(type: Copy, dependsOn: [clean, build]) {
	from jar.archivePath
	into project.rootDir
	rename {
		'app.jar'
	}
}
stage.mustRunAfter(clean)

clean << {
	project.file('app.jar').delete()
}
